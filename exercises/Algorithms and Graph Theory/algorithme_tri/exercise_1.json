{
    "script": "La fonction tri_bulle ci-dessous prend en argument une liste L de nombres flottants et en effectue un tri en ordre croissant.def tri_bulle(L):n=len(L)for i in range(n):for j in range(n-1,i,-1):if L[j]<L[j-1]:L[j],L[j-1]=L[j-1],L[j]  # échange d'élémentsLors de l'appel tri_bulle(L) où L est la liste [5,2,3,1,4], donner le contenu de la liste L à la fin de chaque itération de la boucle for i in range(n):.On suppose que L est une liste non vide de nombres réels. Montrer que, pour tout $k\\in\\{0,\\dots,n\\}$, la propriété $\\mathcal P(k)$ suivante est vraie :\r\n\"après $k$ itérations de la première boucle, les $k$ premiers éléments de la liste sont triés par ordre croissant et sont tous inférieurs aux $n-k$ éléments restants\".En déduire que tri_bulle(L) trie bien la liste L en ordre croissant.Donner la complexité dans le meilleur des cas et dans le pire des cas de la fonction tri_bulle.",
    "hint": "Raisonner par récurrence finie.Il n'y a pas de différence entre le pire des cas et le meilleur des cas. Combien de fois entre-t-on dans la deuxième boucle?",
    "solution": "A chaque itération de la boucle, on parcourt la liste entre l'indice $i$ et le dernier indice (en partant du dernier), et on déplace vers le début un élément qui est plus grand que l'élément qui le précède immédiatement. On obtient doncAprès $i=0$, on obtient L=[1,5,2,3,4]Après $i=1$, on obtient L=[1,2,5,3,4]Après $i=2$, on obtient L=[1,2,3,5,4]Après $i=3$, on obtient L=[1,2,3,4,5]Après $i=4$, on obtient L=[1,2,3,4,5]Démontrons cette propriété par récurrence finie sur $k$.Initialisation : la propriété $\\mathcal P(0)$ est clairement vraie.Hérédité : soit $k\\in\\{0,\\dots,n-1\\}$ telle que la propriété $\\mathcal P(k)$ est vraie, et prouvons que $\\mathcal P(k+1)$ est vraie. Alors la $k+1$-ième itération laisse les $k$ premiers éléments de $L$ invariants. De plus, \r\nelle change les $n-k$ derniers éléments de sorte de mettre en position $k+1$ le plus petit de ces éléments. Alors, les $k+1$ premiers éléments sont bien triés, puisque les $k$ premiers l'étaient déjà, et qu'on a mis en position $k+1$ un élément qui était plus grand qu'eux. De plus, puisque le $(k+1)$ième élément est plus petit que les suivants, les $k+1$ premiers éléments sont inférieurs aux $n-(k+1)$ derniers. Ainsi, $\\mathcal P(k+1)$ est vraie.Conclusion : Par le principe de récurrence (finie), $\\mathcal P(n)$ est vraie, et donc les $n$ premiers éléments de la liste, c'est-à-dire tous les éléments de la liste, sont triés en ordre croissant.Quelle que soit la configuration initiale,lors de la première exécution de la première boucle, les instructions de la deuxième boucle sont exécutées $n-1$ fois;lors de la deuxième exécution de la première boucle, les instructions de la deuxième boucle sont exécutées $n-2$ fois;etc...Les instructions à l'intérieur des deux boucles sont donc exécutées $(n-1)+(n-2)+\\dots+1=\\frac{n(n-1)}2$ fois. Comme il n'y a qu'un nombre fini d'instructions élémentaires exécutées à chaque itération, la complexité de la fonction, dans le meilleur comme dans le pire des cas, est en $O(n^2)$.",
    "lang": "french"
}